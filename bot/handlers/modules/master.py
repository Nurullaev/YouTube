import asyncio
import os
import random
import shutil
import time
from typing import Any, Callable

import requests
from aiogram import exceptions, types
from tenacity import retry, retry_if_exception_type, stop_after_attempt
from videoprops import get_video_properties

ERROR_MESSAGES = {
    "size_limit": "‚ö†Ô∏è –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∏–∑-–∑–∞ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π —Ç–µ–ª–µ–≥—Ä–∞–º–∞, –º—ã –Ω–µ –º–æ–∂–µ–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –≤–∏–¥–µ–æ –±–æ–ª—å—à–µ 50 –º–µ–≥–∞–±–∞–π—Ç. –ü–æ–ø—ã—Ç–∫–∞ –≤—ã–ª–æ–∂–∏—Ç—å —Ñ–∞–π–ª –Ω–∞ filebin.net",
    "general_error": "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.",
    "multiple_videos_error": "‚ö†Ô∏è –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –ø–æ–∫–∞ —Å–∫–∞—á–∞–µ—Ç—Å—è –ø—Ä–æ—à–ª–æ–µ –≤–∏–¥–µ–æ –∏ –ø–æ–≤—Ç–æ—Ä–∏—Ç–µ —Å–Ω–æ–≤–∞.",
}
currently_downloading = set()


async def async_download(func: Callable) -> Any:
    return await asyncio.to_thread(func)


def publish(filename: str) -> str:
    with open(filename, "rb") as file:
        headers = {"filename": filename, "Content-Type": "application/octet-stream"}
        response = requests.post(
            url="https://filebin.net",
            files={"file": file},
            data={"bin": "anekobtw"},
            headers=headers,
        )
    res = response.json()
    return f"https://filebin.net/{res['bin']['id']}/{res['file']['filename']}"


@retry(retry=retry_if_exception_type(exceptions.TelegramNetworkError), stop=stop_after_attempt(3))
async def master_handler(message: types.Message, send_function: Callable, download_function: Callable, url: str) -> None:
    if message.from_user.id in currently_downloading:
        await message.answer(ERROR_MESSAGES["multiple_videos_error"])
        return

    currently_downloading.add(message.from_user.id)
    status_msg = await message.answer(f"‚è≥ –§–∞–π–ª –ø–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ –Ω–µ–º–Ω–æ–≥–æ.")

    try:
        filename = await async_download(download_function)

        if filename.endswith(".mp4"):
            props = get_video_properties(filename)
            await send_function(types.FSInputFile(filename), caption="<b>@free_yt_dl_bot</b>", height=props["height"], width=props["width"])
        else:
            await send_function(types.FSInputFile(filename), caption="<b>@free_yt_dl_bot</b>")

        await message.delete()
        await status_msg.delete()

    except exceptions.TelegramEntityTooLarge:
        await status_msg.edit_text(ERROR_MESSAGES["size_limit"])
        await status_msg.edit_text(publish(filename))
        await message.delete()

    except Exception as e:
        print(e)
        await status_msg.edit_text(
            text=ERROR_MESSAGES["general_error"],
            reply_markup=types.InlineKeyboardMarkup(inline_keyboard=[[types.InlineKeyboardButton(text="üì© –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ (–∞–Ω–æ–Ω–∏–º–Ω–æ)", callback_data=f"report!{url}")]]),
        ),

    else:
        if random.randint(1, 10) == 1:
            msg = await message.answer("–ü—Ä–∏–≤–µ—Ç! –Ø <b>@free_yt_dl_bot</b> ‚Äî –ø–æ–ª–Ω–æ—Å—Ç—å—é –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π, –±–µ–∑ —Ä–µ–∫–ª–∞–º—ã –∏ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–¥–ø–∏—Å–æ–∫. –ï—Å–ª–∏ —Ç–µ–±–µ –Ω—Ä–∞–≤–∏—Ç—Å—è –º–æ—è —Ä–∞–±–æ—Ç–∞, –∑–∞–≥–ª—è–Ω–∏ –Ω–∞ –º–æ–π <b><a href='https://t.me/anekobtw_c'>—Ç–µ–ª–µ–≥—Ä–∞–º –∫–∞–Ω–∞–ª —Å –Ω–æ–≤–æ—Å—Ç—è–º–∏</a></b> ‚Äî —ç—Ç–æ –±–æ–ª—å—à–∞—è –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –¥–ª—è –º–µ–Ω—è! üòä\n\n<b>–≠—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–∞–º–æ—É–¥–∞–ª–∏—Ç—Å—è —á–µ—Ä–µ–∑ 10 —Å–µ–∫—É–Ω–¥</b>")
            time.sleep(10)
            await msg.delete()

    finally:
        currently_downloading.discard(message.from_user.id)
        if os.path.isfile(filename):
            os.remove(filename)
        elif os.path.isdir(filename):
            shutil.rmtree(filename)
